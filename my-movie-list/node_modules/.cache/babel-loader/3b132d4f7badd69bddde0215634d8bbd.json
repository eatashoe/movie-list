{"ast":null,"code":"var _jsxFileName = \"/Users/winston/my-movie-list/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createAction } from '@reduxjs/toolkit';\nimport { selectSearchLoaded, setSearchLoaded, selectSearchValue, setSearchValue, clearSearchValue, removeSearchValue, updateAsyncPredictions, selectPredictions, clearPredictions, update, updateAsyncResult } from './searchSlice';\nimport useClickOut from './useClickOut';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBarContainer = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    box-shadow: 0px 2px 5px lightgrey;\n    border-radius: 30px;\n    position: relative;\n    &:hover{\n        box-shadow: 0px 2px 5px grey;\n    }\n    margin-top: 15px;\n    background: white;\n    @media (min-width: 800px) {\n        width:45vw;\n        margin-top: 0px;\n        margin:10px 0px 10px 0px;\n    }\n`;\n_c = SearchBarContainer;\nconst SearchBar = styled.textarea`\n    width: 100%;\n    // max-width: 100vw;\n    height: 1em;\n    background: transparent;\n    border:none;\n    outline: none;\n    resize: none;\n    overflow: none;\n    white-space: nowrap;\n    font-size: 20px;\n    margin: 10px 20px 0px 15px;\n    font-family: 'Nunito', sans-serif;\n`;\n_c2 = SearchBar;\nconst SearchIcon = styled.i`\n    margin: 10px 0px 10px 20px;\n    transform: scale(0.75) translateY(-1px);\n    color: darkgrey;\n`;\n_c3 = SearchIcon;\nconst SearchClearIcon = styled.i`\n    margin: 10px 0px 10px 0px;\n    padding-right: 15px;\n    color: grey;\n    border-right: 1px darkgrey solid;\n    cursor: pointer;\n    transform: translateY(2px);\n`;\n_c4 = SearchClearIcon;\nconst GuessContainer = styled.div`\n    // border: 1px solid;\n    margin: 0px 20px 5px 20px;\n    border-top: 1px solid lightgrey;\n    // height: 200px;\n`;\n_c5 = GuessContainer;\nconst Prediction = styled.div`\n    width: 100%;\n    display: flex;\n    font-size: 16px;\n    font-family: 'Nunito', sans-serif;\n    &:hover{\n        background: lightgrey;\n    }\n`;\n_c6 = Prediction;\n\nconst Search = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const searchLoaded = useSelector(selectSearchLoaded);\n  const searchValue = useSelector(selectSearchValue);\n  const predictions = useSelector(selectPredictions);\n  const searchBarRef = React.useRef(null);\n  const clearSearchRef = React.useRef(null);\n  useClickOut(searchBarRef, clearSearchRef);\n\n  function keyDownHandler(e) {\n    // console.log(\"nice\",e.key);\n    if (e.key.length > 1) {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        dispatch(update(searchValue.trim()));\n        dispatch(setSearchLoaded(false));\n        dispatch(updateAsyncResult(searchValue.trim()));\n      } else if (e.key === \"Backspace\") {\n        if (searchValue.length === 0) {} else {\n          dispatch(removeSearchValue());\n        }\n      }\n    } else {\n      dispatch(setSearchValue(e.key));\n    }\n\n    if (searchValue.trim().length > 3) {\n      dispatch(updateAsyncPredictions(searchValue.trim()));\n    }\n  }\n\n  function clearSearch() {\n    searchBarRef.current.value = \"\";\n    dispatch(clearSearchValue());\n    dispatch(clearPredictions());\n  }\n\n  function loadPredictions() {\n    var p = [];\n    predictions.Search.map((value, i) => p.push( /*#__PURE__*/_jsxDEV(Prediction, {\n      children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n        style: {\n          margin: \"10px 0px 10px 0px\",\n          fontSize: \"24px\"\n        },\n        className: \"fas fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: \"10px 20px 10px 15px\",\n          wordWrap: \"break-word\",\n          width: \"100%\"\n        },\n        children: value.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this)));\n    return p;\n  }\n\n  return /*#__PURE__*/_jsxDEV(SearchBarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          width: 'calc(100% - 96.5px)'\n        },\n        children: [searchLoaded ? /*#__PURE__*/_jsxDEV(SearchIcon, {\n          className: \"fas fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(SearchBar, {\n          ref: searchBarRef,\n          onFocus: () => dispatch(setSearchLoaded(true)) // onBlur={() => dispatch(setSearchLoaded(false))}\n          ,\n          onKeyDown: keyDownHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [searchValue.length > 0 ? /*#__PURE__*/_jsxDEV(SearchClearIcon, {\n          ref: clearSearchRef,\n          className: \"fas fa-times\",\n          onClick: clearSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(SearchIcon, {\n          className: \"fas fa-search\",\n          style: {\n            color: 'royalblue',\n            transform: 'scale(1) translateY(2px)',\n            cursor: 'pointer',\n            marginRight: '20px'\n          },\n          onClick: () => dispatch(updateAsyncResult(searchValue.trim()))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), predictions.Response === 'True' && searchLoaded ? /*#__PURE__*/_jsxDEV(GuessContainer, {\n      children: loadPredictions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"x+ehfyqmL9A3GLjTBl/hjFJtb2Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useClickOut];\n});\n\n_c7 = Search;\nexport default Search;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SearchBarContainer\");\n$RefreshReg$(_c2, \"SearchBar\");\n$RefreshReg$(_c3, \"SearchIcon\");\n$RefreshReg$(_c4, \"SearchClearIcon\");\n$RefreshReg$(_c5, \"GuessContainer\");\n$RefreshReg$(_c6, \"Prediction\");\n$RefreshReg$(_c7, \"Search\");","map":{"version":3,"sources":["/Users/winston/my-movie-list/src/components/Search.js"],"names":["React","styled","useSelector","useDispatch","createAction","selectSearchLoaded","setSearchLoaded","selectSearchValue","setSearchValue","clearSearchValue","removeSearchValue","updateAsyncPredictions","selectPredictions","clearPredictions","update","updateAsyncResult","useClickOut","SearchBarContainer","div","SearchBar","textarea","SearchIcon","i","SearchClearIcon","GuessContainer","Prediction","Search","dispatch","searchLoaded","searchValue","predictions","searchBarRef","useRef","clearSearchRef","keyDownHandler","e","key","length","preventDefault","trim","clearSearch","current","value","loadPredictions","p","map","push","margin","fontSize","wordWrap","width","Title","display","justifyContent","color","transform","cursor","marginRight","Response"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createAction } from '@reduxjs/toolkit';\nimport {\n    selectSearchLoaded,\n    setSearchLoaded,\n    selectSearchValue,\n    setSearchValue,\n    clearSearchValue,\n    removeSearchValue,\n    updateAsyncPredictions,\n    selectPredictions,\n    clearPredictions,\n    update,\n    updateAsyncResult,\n} from './searchSlice';\nimport useClickOut from './useClickOut';\n\nconst SearchBarContainer = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    box-shadow: 0px 2px 5px lightgrey;\n    border-radius: 30px;\n    position: relative;\n    &:hover{\n        box-shadow: 0px 2px 5px grey;\n    }\n    margin-top: 15px;\n    background: white;\n    @media (min-width: 800px) {\n        width:45vw;\n        margin-top: 0px;\n        margin:10px 0px 10px 0px;\n    }\n`\nconst SearchBar = styled.textarea`\n    width: 100%;\n    // max-width: 100vw;\n    height: 1em;\n    background: transparent;\n    border:none;\n    outline: none;\n    resize: none;\n    overflow: none;\n    white-space: nowrap;\n    font-size: 20px;\n    margin: 10px 20px 0px 15px;\n    font-family: 'Nunito', sans-serif;\n`\nconst SearchIcon = styled.i`\n    margin: 10px 0px 10px 20px;\n    transform: scale(0.75) translateY(-1px);\n    color: darkgrey;\n`\nconst SearchClearIcon = styled.i`\n    margin: 10px 0px 10px 0px;\n    padding-right: 15px;\n    color: grey;\n    border-right: 1px darkgrey solid;\n    cursor: pointer;\n    transform: translateY(2px);\n`\nconst GuessContainer = styled.div`\n    // border: 1px solid;\n    margin: 0px 20px 5px 20px;\n    border-top: 1px solid lightgrey;\n    // height: 200px;\n`\nconst Prediction = styled.div`\n    width: 100%;\n    display: flex;\n    font-size: 16px;\n    font-family: 'Nunito', sans-serif;\n    &:hover{\n        background: lightgrey;\n    }\n`\nconst Search = () => {\n    const dispatch = useDispatch();\n    const searchLoaded = useSelector(selectSearchLoaded);\n    const searchValue = useSelector(selectSearchValue);\n    const predictions = useSelector(selectPredictions);\n    const searchBarRef = React.useRef(null);\n    const clearSearchRef = React.useRef(null);\n\n    useClickOut(searchBarRef,clearSearchRef);\n\n    function keyDownHandler(e){\n        // console.log(\"nice\",e.key);\n        if(e.key.length > 1){\n            if(e.key === \"Enter\"){\n                e.preventDefault();\n                dispatch(update(searchValue.trim()));\n                dispatch(setSearchLoaded(false));\n                dispatch(updateAsyncResult(searchValue.trim()));\n            }\n            else if(e.key === \"Backspace\"){\n                if(searchValue.length === 0){\n                    \n                }\n                else{\n                    dispatch(removeSearchValue())\n                }\n            }\n        }\n        else{\n            dispatch(setSearchValue(e.key));\n        }\n        if(searchValue.trim().length > 3){\n            dispatch(updateAsyncPredictions(searchValue.trim()));\n        }\n    }\n    function clearSearch(){\n        searchBarRef.current.value = \"\";\n        dispatch(clearSearchValue());\n        dispatch(clearPredictions());\n    }\n    function loadPredictions(){\n        var p = [];\n        predictions.Search.map((value, i) => (\n            p.push(\n                <Prediction key={i}>\n                    <SearchIcon style={{margin:\"10px 0px 10px 0px\", fontSize: \"24px\"}} className=\"fas fa-search\"></SearchIcon>\n                    <span style={{margin:\"10px 20px 10px 15px\", wordWrap: \"break-word\",width: \"100%\"}}>{value.Title}</span>\n                </Prediction>\n            )\n        ));\n        return p;\n    }\n    return(\n        <SearchBarContainer>\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <div style={{display: 'flex', width: 'calc(100% - 96.5px)'}}>\n                    {\n                        searchLoaded\n                        ?\n                        <SearchIcon className=\"fas fa-search\"></SearchIcon>\n                        :\n                        null\n                    } \n                    <SearchBar ref={searchBarRef}\n                        onFocus={() => dispatch(setSearchLoaded(true))}\n                        // onBlur={() => dispatch(setSearchLoaded(false))}\n                        onKeyDown={keyDownHandler}\n                        ></SearchBar>\n                </div>\n                <div>\n                    {\n                        searchValue.length > 0\n                        ?\n                        <SearchClearIcon \n                            ref={clearSearchRef}\n                            className=\"fas fa-times\"\n                            onClick={clearSearch}\n                        ></SearchClearIcon>\n                        :\n                        null\n                    }\n                    <SearchIcon className=\"fas fa-search\"\n                        style={{color: 'royalblue', transform: 'scale(1) translateY(2px)', cursor: 'pointer', marginRight: '20px'}}\n                        onClick={() => dispatch(updateAsyncResult(searchValue.trim()))}\n                    ></SearchIcon>\n                </div>\n            </div>\n            {\n                predictions.Response === 'True' && searchLoaded\n                ?\n                <GuessContainer>\n                    {loadPredictions()}\n                </GuessContainer>\n                :\n                null\n            }\n        </SearchBarContainer>\n    );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}